(self.webpackChunk_angular_extensions_elements=self.webpackChunk_angular_extensions_elements||[]).push([[592],{20:(e,t,r)=>{"use strict";r.d(t,{x:()=>a});var n=r(5366),i=r(3589);let a=(()=>{class e{constructor(e,t,r,n,i){this.vcr=e,this.template=t,this.elementsLoaderService=r,this.cfr=n,this.cdr=i,this.viewRef=null}ngOnInit(){const e=this.template,t=e._declarationTContainer?e._declarationTContainer.tagName||e._declarationTContainer.value:e._def.element.template.nodes[0].element.name,r=this.elementsLoaderService.getElementConfig(t)||{},n=this.elementsLoaderService.options,i=r.loadingComponent||n.loadingComponent;if(this.loadingTemplateRef)this.vcr.createEmbeddedView(this.loadingTemplateRef);else if(i){const e=this.cfr.resolveComponentFactory(i);this.vcr.createComponent(e)}this.elementsLoaderService.loadElement(this.url,t,this.isModule,this.importMap,null==r?void 0:r.hooks).then(()=>customElements.whenDefined(t)).then(()=>{this.vcr.clear(),this.viewRef=this.vcr.createEmbeddedView(this.template),this.cdr.markForCheck()}).catch(e=>{this.vcr.clear();const i=r.errorComponent||n.errorComponent;if(this.errorTemplateRef)this.vcr.createEmbeddedView(this.errorTemplateRef),this.cdr.markForCheck();else if(i){const e=this.cfr.resolveComponentFactory(i);this.vcr.createComponent(e),this.cdr.markForCheck()}else console.error(`@angular-extensions/elements - Loading of element <${t}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElement="errorTemplate: error" to display customized error message in place of element`)})}destroyEmbeddedView(){this.viewRef&&!this.viewRef.destroyed&&(this.viewRef.detach(),this.viewRef.destroy(),this.viewRef=null)}}return e.\u0275fac=function(t){return new(t||e)(n.Y36(n.s_b),n.Y36(n.Rgc),n.Y36(i.$),n.Y36(n._Vd),n.Y36(n.sBO))},e.\u0275dir=n.lG2({type:e,selectors:[["","axLazyElement",""]],inputs:{url:["axLazyElement","url"],loadingTemplateRef:["axLazyElementLoadingTemplate","loadingTemplateRef"],errorTemplateRef:["axLazyElementErrorTemplate","errorTemplateRef"],isModule:["axLazyElementModule","isModule"],importMap:["axLazyElementImportMap","importMap"]}}),e})()}}]);